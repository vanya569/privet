#–ò–∑–º–µ–Ω–µ–Ω–æ

import random
import telebot
from re import sub
bot = telebot.TeleBot('6327302177:AAEPZSxkjxxocz0weJKBWFPfOegKaHNfMcQ')

a = random.randint(0, 100)

salads = {
    '–ì—Ä–µ—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç - 250 –†–£–ë.\n': 250,
    '–û–≤–æ—â–Ω–æ–π —Å–∞–ª–∞—Ç - 200 –†–£–ë.\n': 200,
    '–¶–µ–∑–∞—Ä—å —Å–∞–ª–∞—Ç - 275 –†–£–ë.\n': 275
}

shaurma = {
    '–®–∞–≤–µ—Ä–º–∞ –°—ã—Ä–Ω–∞—è - 270 –†–£–ë.\n': 270,
    '–®–∞–≤–µ—Ä–º–∞ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è - 245 –†–£–ë.\n': 245,
    '–®–∞–≤–µ—Ä–º–∞ –í–µ–≥–∞–Ω - 220 –†–£–ë.\n': 220,
    '–®–∞–≤–µ—Ä–º–∞ –î–µ—Ä–µ–≤–µ–Ω—Å–∫–∞—è - 290 –†–£–ë.\n': 290,
    '–ê–£–§—Ñ—Ñ - 540 –†–£–ë.\n': 540,
    '–®–∞–≤–µ—Ä–º–∞ –ö–∞–≤–∫–∞–∑—Å–∫–∞—è - 360 –†–£–ë.\n': 360,
    '–®–∞–≤–µ—Ä–º–∞ –ú–∏–Ω–∏ - 230 –†–£–ë.\n': 230,
    '–®–∞–≤–µ—Ä–º–∞ –≠–∫–∑–æ—Ç–∏–∫–∞ - 280 –†–£–ë.\n': 280,
}

fustfood = {
    '–ö–∞—Ä—Ç–æ—à–∫–∞ —Ñ—Ä–∏ - 190 –†–£–ë.\n': 190,
    '–ù–∞–≥–≥–µ—Ç—Å—ã - 290 –†–£–ë.\n': 290,
    '–ö—Ä—ã–ª—å—è - 290 –†–£–ë.\n': 290,
    '–°—Ç—Ä–∏–ø—Å—ã - 290 –†–£–ë.\n': 290,
    '–°—ã—Ä–Ω—ã–µ –ø–∞–ª–æ—á–∫–∏ - 380 –†–£–ë.\n': 380,
    '–õ—É–∫–æ–≤—ã–µ –∫–æ–ª—å—Ü–∞ - 170 –†–£–ë.\n': 170
    
}
dener = {
    '–î—ë–Ω–µ—Ä(–∫—É—Ä–∏—Ü–∞) - 330 –†–£–ë.\n': 330,
    '–î—ë–Ω–µ—Ä(—Å–≤–∏–Ω–∏–Ω–∞) - 350 –†–£–ë.\n': 350,
}

kebabs = {
    '–ê—Å—Å–æ—Ä—Ç–∏ - 1950 –†–£–ë.\n': 1950,
    '–°–≤–∏–Ω–æ–π —à–∞—à–ª—ã–∫ - 400 –†–£–ë.\n': 400,
    '–ö—É—Ä–∏–Ω—ã–π —à–∞—à–ª—ã–∫ - 340 –†–£–ë.\n': 340,
    '–ö–∞—Ä—Ç–æ—à–∫–∞ - 230 –†–£–ë.\n': 230,
    '–û–≤–æ—â–Ω–æ–π —à–∞—à–ª—ã–∫ - 270 –†–£–ë.\n': 270, 
    '–ö–µ–±–∞–±(–∫—É—Ä–∏—Ü–∞) - 320 –†–£–ë.\n': 320,
    '–ö–µ–±–∞–±(–≥–æ–≤—è–¥–∏–Ω–∞) - 360 –†–£–ë.\n': 360,
}

kebabs_for_lavash = [
    '–°–≤–∏–Ω–æ–π —à–∞—à–ª—ã–∫ - 400 –†–£–ë.\n',
    '–ö—É—Ä–∏–Ω—ã–π —à–∞—à–ª—ã–∫ - 340 –†–£–ë.\n',
    '–ö–µ–±–∞–±(–∫—É—Ä–∏—Ü–∞) - 320 –†–£–ë.\n',
    '–ö–µ–±–∞–±(–≥–æ–≤—è–¥–∏–Ω–∞) - 360 –†–£–ë.\n',
]

pancakes = {
    '–ë–∞–Ω–∞–Ω-–Ω—É—Ç–µ–ª–ª–∞-–æ—Ä–µ—Ö - 270 –†–£–ë.\n': 270,
    '–ë–ª–∏–Ω—á–∏–∫ —Å –∫—É—Ä–∏—Ü–µ–π - 270 –†–£–ë.\n': 270,
    '–ë–ª–∏–Ω—á–∏–∫ –≤–µ—Ç—á–∏–Ω–∞ - 260 –†–£–ë.\n': 260,
    '–ö–∞—Ä–±–æ–Ω–∞—Ç - 310 –†–£–ë.\n': 310,  
}
drinks = {
    '–í–æ–¥–∞(–±–µ–∑ –≥–∞–∑–∞) - 90 –†–£–ë.\n': 90,
    '–í–æ–¥–∞(—Å –≥–∞–∑–æ–º) - 90 –†–£–ë.\n': 90,
    'Burn –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π - 180 –†–£–ë.\n': 180,
    '–î–æ–±—Ä—ã–π –∫–æ–ª–∞ 0,3 - 110 –†–£–ë.\n': 110,
    '–î–æ–±—Ä—ã–π —Å–æ–∫(–º—É–ª—å—Ç–∏—Ñ—Ä—É–∫—Ç) - 90 –†–£–ë.\n': 90,
    '–î–æ–±—Ä—ã–π –∫–æ–ª–∞ 0,5 - 130 –†–£–ë.\n': 130,
    '–ú–æ—Ä—Å –±—Ä—É—Å–Ω–∏—á–Ω—ã–π 0,3 - 90 –†–£–ë.\n': 90,
    'Pulpy 0,5 - 140 –†–£–ë.\n': 140,
    'Rich 0,5 - 140 –†–£–ë.\n': 140,
    'Pulpy 1–ª - 180 –†–£–ë.\n': 180,
    '–î–æ–±—Ä—ã–π –∫–æ–ª–∞ 1–ª - 165 –†–£–ë.\n': 165,
}
additions = {
    '–ö—É—Ä–∏—Ü–∞ - 30 –†–£–ë.\n': 30,
    '–°–≤–∏–Ω–∏–Ω–∞ - 40 –†–£–ë.\n': 40,
    '–õ—É–∫ –∂–∞—Ä–µ–Ω—ã–π - 15 –†–£–ë.\n': 15,
    '–°—ã—Ä - 35 –†–£–ë.\n': 35,
    '–ì—Ä–∞–Ω–∞—Ç - 30 –†–£–ë.\n': 30,
    '–•–∞–ª–∞–ø–µ–Ω—å–æ - 20 –†–£–ë.\n': 20,
    '–ö–∞—Ä—Ç–æ—à–∫–∞ - 20 –†–£–ë.\n': 20,
    '–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≥—É—Ä—Ü—ã - 20 –†–£–ë.\n': 20,
    '–ì—Ä–∏–±—ã —à–∞–º–ø–∏–Ω—å–æ–Ω—ã -  40 –†–£–ë.\n': 40,
}
additions_d = {
    '–∫—É—Ä–∏—Ü–∞ - 30 –†–£–ë.\n': 30,
    '—Å–≤–∏–Ω–∏–Ω–∞ - 40 –†–£–ë.\n': 40,
    '–ª—É–∫ –∂–∞—Ä–µ–Ω—ã–π - 15 –†–£–ë.\n': 15,
    '—Å—ã—Ä - 35 –†–£–ë.\n': 35,
    '–≥—Ä–∞–Ω–∞—Ç - 30 –†–£–ë.\n': 30,
    '—Ö–∞–ª–∞–ø–µ–Ω—å–æ - 20 –†–£–ë.\n': 20,
    '–∫–∞—Ä—Ç–æ—à–∫–∞ - 20 –†–£–ë.\n': 20,
    '–º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≥—É—Ä—Ü—ã - 20 –†–£–ë.\n': 20,
    '–≥—Ä–∏–±—ã —à–∞–º–ø–∏–Ω—å–æ–Ω—ã -  40 –†–£–ë.\n': 40,
}


users_adres = {}
user_number = {}
user_time = {}
msgs_id = {}
carts = {}
total_dict = {}
cost_of_delivery = 250


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ–Ω—é –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –±–ª—é–¥. food - –ø–∞—Ä–∞–º–µ—Ç—Ä —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ —Å–ª–æ–≤–∞—Ä—å –±–ª—é–¥
def generate_menu(food):
    keyboard = telebot.types.InlineKeyboardMarkup()
    for i in food:
        keyboard.add(telebot.types.InlineKeyboardButton(f'{i}', callback_data=i))
    return keyboard

def remove(list):
    pattern = '[\n,.]'
    list = [sub(pattern, '', i) for i in list]
    return list

def has_letter(s):
    return any(char.isalpha() for char in s)


# Start
@bot.message_handler(commands=['start'])
def send_hello(msg):
    bot_msg = bot.send_message(msg.chat.id, '–ü—Ä–∏–£–µ—Ç‚úå\n –Ø –¢–µ–ª–µ–≥—Ä–∞–º-Bot "–ê–£–§—Ñ—Ñ", —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ç—ã, –º–æ–π –¥–æ—Ä–æ–≥–æ–π, –ø–æ–∫—É—à–∞–ª —Å –∫–∞–π—Ñ–æ–ºü§™\n –Ø –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å —Ö–æ—Ç–µ–ª–∫–∏ —Ç–≤–æ–µ–≥–æ –∂–∏–≤–æ—Ç–∏–∫–∞, –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ –∏—Ö —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ –∂–∏–∑–Ω—åüòâ\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: +79041163611 \n +79500928672 \n\n–§—É–Ω–∫—Ü–∏–∏:\n/make_an_order - –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑\n/show_menu - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é\n/clean_cart - –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É\n/start - –ù–∞—á–∞—Ç—å')
    msgs_id[msg.from_user.id] = bot_msg.message_id

    
    
    
# Make an order (reply keyboard)
@bot.message_handler(commands=['make_an_order'])
def make_order(msg):
    kb = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add('–°–∞–ª–∞—Ç—ã ü•ó', '–®–∞—É—Ä–º–∞ üåØ', '–§–∞—Å—Ç—Ñ—É–¥ üçü', '–î–µ–Ω–µ—Ä ü•™', '–®–∞—à–ª—ã–∫ üçñ', '–ë–ª–∏–Ω—ã ü•û', '–ù–∞–ø–∏—Ç–∫–∏ ü•§' )
    bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±–ª—é–¥–∞', reply_markup=kb)

# Show menu (–ø—Ä–æ—Å–º–æ—Ç—Ä –º–µ–Ω—é)
@bot.message_handler(commands=['show_menu'])
def show(msg):
    bot.send_media_group(msg.chat.id,  [telebot.types.InputMediaPhoto(open('img/—à–∞–≤—É—Ö–∞ 1.jpg', 'rb')), telebot.types.InputMediaPhoto(open('img/—à–∞—à–ª—ã–∫–∏.jpeg', 'rb')), telebot.types.InputMediaPhoto(open('img/—Ñ–∞—Å—Ç—Ñ—É–¥.jpeg', 'rb')), telebot.types.InputMediaPhoto(open('img/—Å–∞–ª–∞—Ç–∏–∫–∏ 1.jpg', 'rb')), telebot.types.InputMediaPhoto(open('img/ –¥–æ–ø—ã 1.jpg', 'rb'))])

# –í—ã–±—Ä–∞—Ç—å —Å–∞–ª–∞—Ç
@bot.message_handler(func=lambda call: call.text == '–°–∞–ª–∞—Ç—ã ü•ó')
def choice_salad(msg):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å —Å–∞–ª–∞—Ç', callback_data='choice_salad'))
    bot_msg = bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–ª–∞—Ç', reply_markup=keyboard)
    msgs_id[msg.from_user.id] = bot_msg.message_id

# –°–ø–∏—Å–æ–∫ —Å–∞–ª–∞—Ç–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ inline keyboard
@bot.callback_query_handler(func=lambda call: call.data == 'choice_salad')
def add_salad(call):
    keyboard = generate_menu(salads)
    bot.edit_message_text('–°–∞–ª–∞—Ç—ã:', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–ª–∞—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
@bot.callback_query_handler(func=lambda call: call.data in salads)
def add_salad_in_cart(call):
    if call.from_user.id in carts:
        carts[call.from_user.id].append(call.data)
        total_dict[call.from_user.id].append(salads[call.data])
    else:
        carts[call.from_user.id] = [call.data]
        total_dict[call.from_user.id] = [salads[call.data]]
    user_cart = carts[call.from_user.id]
    text = ('–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ö–æ—Ä–∑–∏–Ω–∞:\n' + ' {} '*len(user_cart)).format(*user_cart) 
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï', callback_data='choice_salad'))
    keyboard.add(telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üí∏', callback_data='place_order'))
    bot.edit_message_text(f'{text}\n{sum(total_dict[call.from_user.id])} —Ä—É–±', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard)



# –í—ã–±—Ä–≤—Ç—å —à–∞—É—Ä–º—É
@bot.message_handler(func=lambda call: call.text == '–®–∞—É—Ä–º–∞ üåØ')
def choice_shaurma(msg):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å —à–∞—É—Ä–º—É', callback_data='choice_shaurma'))
    bot_msg = bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —à–∞—É—Ä–º—É', reply_markup=keyboard)
    msgs_id[msg.from_user.id] = bot_msg.message_id

# –°–ø–∏—Å–æ–∫ —à–∞—É—Ä–º—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ inline keyboard
@bot.callback_query_handler(func=lambda call: call.data == 'choice_shaurma')
def add_shaurma(call):
    keyboard = generate_menu(shaurma)
    bot.edit_message_text('–®–∞—É—Ä–º–∞:', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard)

    

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —à–∞—É—Ä–º—ã –≤ –∫–æ—Ä–∑–∏–Ω—É
@bot.callback_query_handler(func=lambda call: call.data in shaurma)
def add_shaurma_in_cart(call):
    if call.from_user.id in carts:
        carts[call.from_user.id].append(call.data)
        total_dict[call.from_user.id].append(shaurma[call.data])
    else:
        carts[call.from_user.id] = [call.data]
        total_dict[call.from_user.id] = [shaurma[call.data]]
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–ø—ã –ø–æ –∫–∞–π—Ñ—É üí™', callback_data='addit_yes'))
    keyboard.add(telebot.types.InlineKeyboardButton('–ë–µ–∑ –¥–æ–ø–æ–≤ üëé', callback_data='addit_no'))
    bot.send_message(call.message.chat.id, '–•–æ—á–µ—à—å –¥–æ–ø—ã –ø–æ –∫–∞–π—Ñ—É???', reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: call.data == 'addit_yes')
def yes(call): 
    keyboard = generate_menu(additions)
    bot.send_message(call.message.chat.id, '–î–æ–ø—ã:', reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data in additions)
def add_add(call):
    carts[call.from_user.id][-1] += f' + {call.data}'
    total_dict[call.from_user.id].append(additions[call.data])
    user_cart = carts[call.from_user.id]
    text = ('–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ö–æ—Ä–∑–∏–Ω–∞:\n' + ' {} '*len(user_cart)).format(*user_cart) 
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï', callback_data='choice_shaurma'))
    keyboard.add(telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üí∏', callback_data='place_order'))
    bot_msg = bot.send_message(call.message.chat.id, f'{text}\n{sum(total_dict[call.from_user.id])} —Ä—É–±', reply_markup=keyboard)
    msgs_id[call.from_user.id] = bot_msg.message_id

@bot.callback_query_handler(func=lambda call: call.data == 'addit_no')
def no(call):
    user_cart = carts[call.from_user.id]
    text = ('–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ö–æ—Ä–∑–∏–Ω–∞:\n' + ' {} '*len(user_cart)).format(*user_cart) 
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï', callback_data='choice_shaurma'))
    keyboard.add(telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üí∏', callback_data='place_order'))
    bot_msg = bot.send_message(call.message.chat.id, f'{text}\n{sum(total_dict[call.from_user.id])} —Ä—É–±', reply_markup=keyboard)
    msgs_id[call.from_user.id] = bot_msg.message_id




# –í—ã–±—Ä–≤—Ç—å dener
@bot.message_handler(func=lambda call: call.text == '–î–µ–Ω–µ—Ä ü•™')
def choice__dener(msg):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –±–ª—é–¥–æ', callback_data='a'))
    bot_msg = bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ', reply_markup=keyboard)
    msgs_id[msg.from_user.id] = bot_msg.message_id

# –°–ø–∏—Å–æ–∫ dener –≤ —Ñ–æ—Ä–º–∞—Ç–µ inline keyboard
@bot.callback_query_handler(func=lambda call: call.data == 'a')
def add_dener(call):
    keyboard = generate_menu(dener)
    bot.edit_message_text('–î–µ–Ω–µ—Ä—ã:', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–Ω–µ—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
@bot.callback_query_handler(func=lambda call: call.data in dener)
def add_dener_in_cart(call):
    if call.from_user.id in carts:
        carts[call.from_user.id].append(call.data)
        total_dict[call.from_user.id].append(dener[call.data])
    else:
        carts[call.from_user.id] = [call.data]
        total_dict[call.from_user.id] = [dener[call.data]]
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–ø—ã –ø–æ –∫–∞–π—Ñ—É üí™', callback_data='d_addit_yes'))
    keyboard.add(telebot.types.InlineKeyboardButton('–ë–µ–∑ –¥–æ–ø–æ–≤ üëé', callback_data='d_addit_no'))
    bot.send_message(call.message.chat.id, '–•–æ—á–µ—à—å –¥–æ–ø—ã –ø–æ –∫–∞–π—Ñ—É???', reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: call.data == 'd_addit_yes')
def dnr_yes(call): 
    keyboard = generate_menu(additions_d)
    bot.send_message(call.message.chat.id, '–î–æ–ø—ã:', reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data in additions_d)
def add_add(call):
    carts[call.from_user.id][-1] += f' + {call.data}'
    total_dict[call.from_user.id].append(additions_d[call.data])
    user_cart = carts[call.from_user.id]
    text = ('–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ö–æ—Ä–∑–∏–Ω–∞:\n' + ' {} '*len(user_cart)).format(*user_cart) 
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï', callback_data='a'))
    keyboard.add(telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üí∏', callback_data='place_order'))
    bot_msg = bot.send_message(call.message.chat.id, f'{text}\n{sum(total_dict[call.from_user.id])} —Ä—É–±', reply_markup=keyboard)
    msgs_id[call.from_user.id] = bot_msg.message_id

@bot.callback_query_handler(func=lambda call: call.data == 'd_addit_no')
def dnr_no(call):
    user_cart = carts[call.from_user.id]
    text = ('–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ö–æ—Ä–∑–∏–Ω–∞:\n' + ' {} '*len(user_cart)).format(*user_cart) 
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï', callback_data='a'))
    keyboard.add(telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üí∏', callback_data='place_order'))
    bot_msg = bot.send_message(call.message.chat.id, f'{text}\n{sum(total_dict[call.from_user.id])} —Ä—É–±', reply_markup=keyboard)
    msgs_id[call.from_user.id] = bot_msg.message_id



# –í—ã–±—Ä–≤—Ç—å —Ñ–∞—Å—Ç—Ñ—É–¥
@bot.message_handler(func=lambda call: call.text == '–§–∞—Å—Ç—Ñ—É–¥ üçü')
def choice_fustfood(msg):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –±–ª—é–¥–æ', callback_data='choice_fustfood'))
    bot_msg = bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ', reply_markup=keyboard)
    msgs_id[msg.from_user.id] = bot_msg.message_id

# –°–ø–∏—Å–æ–∫ —Ñ–∞—Å—Ç—Ñ—É–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ inline keyboard
@bot.callback_query_handler(func=lambda call: call.data == 'choice_fustfood')
def add_fustfood(call):
    keyboard = generate_menu(fustfood)
    bot.edit_message_text('–§–∞—Å—Ç—Ñ—É–¥:', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞—Å—Ç—Ñ—É–¥–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
@bot.callback_query_handler(func=lambda call: call.data in fustfood)
def add_fustfood_in_cart(call):
    if call.from_user.id in carts:
        carts[call.from_user.id].append(call.data)
        total_dict[call.from_user.id].append(fustfood[call.data])
    else:
        carts[call.from_user.id] = [call.data]
        total_dict[call.from_user.id] = [fustfood[call.data]]
    user_cart = carts[call.from_user.id]
    text = ('–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ö–æ—Ä–∑–∏–Ω–∞:\n' + ' {} '*len(user_cart)).format(*user_cart) 
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï', callback_data='choice_fustfood'))
    keyboard.add(telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üí∏', callback_data='place_order'))
    bot.edit_message_text(f'{text}\n{sum(total_dict[call.from_user.id])} —Ä—É–±', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard)



# –í—ã–±—Ä–≤—Ç—å —à–∞—à–ª—ã–∫
@bot.message_handler(func=lambda call: call.text == '–®–∞—à–ª—ã–∫ üçñ')
def choice_kebabs(msg):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –±–ª—é–¥–æ', callback_data='choice_kebabs'))
    bot_msg = bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ', reply_markup=keyboard)
    msgs_id[msg.from_user.id] = bot_msg.message_id

# –°–ø–∏—Å–æ–∫ —à–∞—à–ª—ã–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ inline keyboard
@bot.callback_query_handler(func=lambda call: call.data == 'choice_kebabs')
def add_kebabs(call):
    keyboard = generate_menu(kebabs)
    bot.edit_message_text('–®–∞—à–ª—ã–∫:', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —à–∞—à–ª—ã–∫ –≤ –∫–æ—Ä–∑–∏–Ω—É
@bot.callback_query_handler(func=lambda call: call.data in kebabs)
def add_kebabs_in_cart(call):
    if call.from_user.id in carts:
        carts[call.from_user.id].append(call.data)
        total_dict[call.from_user.id].append(kebabs[call.data])
    else:
        carts[call.from_user.id] = [call.data]
        total_dict[call.from_user.id] = [kebabs[call.data]]
    
    if call.data in kebabs_for_lavash:
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton('–î–∞ üí™', callback_data='lavash_yes'))
        keyboard.add(telebot.types.InlineKeyboardButton('–ù–µ—Ç üëé', callback_data='lavash_no'))
        bot.send_message(call.message.chat.id, '–ó–∞–≤–µ—Ä–Ω—É—Ç—å –≤ –ª–∞–≤–∞—à–∏–∫???', reply_markup=keyboard)
    else:
        user_cart = carts[call.from_user.id]
        text = ('–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ö–æ—Ä–∑–∏–Ω–∞:\n' + ' {} '*len(user_cart)).format(*user_cart) 
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï', callback_data='choice_kebabs'))
        keyboard.add(telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üí∏', callback_data='place_order'))
        bot.edit_message_text(f'{text}\n{sum(total_dict[call.from_user.id])} —Ä—É–±', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == 'lavash_yes')
def warm_up_kebab(call):
    carts[call.from_user.id][-1] += ' + –ª–∞–≤–∞—à - 25 —Ä—É–±\n'
    total_dict[call.from_user.id].append(25)
    user_cart = carts[call.from_user.id]
    text = ('–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ö–æ—Ä–∑–∏–Ω–∞:\n' + ' {} '*len(user_cart)).format(*user_cart) 
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï', callback_data='choice_kebabs'))
    keyboard.add(telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üí∏', callback_data='place_order'))
    bot_msg = bot.send_message(call.message.chat.id, f'{text}\n{sum(total_dict[call.from_user.id])} —Ä—É–±', reply_markup=keyboard)
    msgs_id[call.from_user.id] = bot_msg.message_id


@bot.callback_query_handler(func=lambda call: call.data == 'lavash_no')
def no(call):
    user_cart = carts[call.from_user.id]
    text = ('–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ö–æ—Ä–∑–∏–Ω–∞:\n' + ' {} '*len(user_cart)).format(*user_cart) 
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï', callback_data='choice_kebabs'))
    keyboard.add(telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üí∏', callback_data='place_order'))
    bot_msg = bot.send_message(call.message.chat.id, f'{text}\n{sum(total_dict[call.from_user.id])} —Ä—É–±', reply_markup=keyboard)
    msgs_id[call.from_user.id] = bot_msg.message_id



#–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª–∏–Ω–æ–≤
@bot.message_handler(func=lambda call: call.text == '–ë–ª–∏–Ω—ã ü•û')
def choice_pancakes(msg):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –±–ª—é–¥–æ', callback_data='choice_pancakes'))
    bot_msg = bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ', reply_markup=keyboard)
    msgs_id[msg.from_user.id] = bot_msg.message_id
 
# –°–ø–∏—Å–æ–∫ –±–ª–∏–Ω–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ inline keyboard 
@bot.callback_query_handler(func=lambda call: call.data == 'choice_pancakes') 
def add_pancakes(call): 
    keyboard = generate_menu(pancakes) 
    bot.edit_message_text('–ë–ª–∏–Ω—ã:', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard)
 
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª–∏–Ω–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É 
@bot.callback_query_handler(func=lambda call: call.data in pancakes) 
def add_pancakes_in_cart(call): 
    if call.from_user.id in carts: 
        carts[call.from_user.id].append(call.data) 
        total_dict[call.from_user.id].append(pancakes[call.data]) 
    else: 
        carts[call.from_user.id] = [call.data] 
        total_dict[call.from_user.id] = [pancakes[call.data]] 
    user_cart = carts[call.from_user.id] 
    text = ('–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ö–æ—Ä–∑–∏–Ω–∞:\n' + ' {} '*len(user_cart)).format(*user_cart)  
    keyboard = telebot.types.InlineKeyboardMarkup() 
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï', callback_data='choice_pancakes')) 
    keyboard.add(telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üí∏', callback_data='place_order')) 
    bot.edit_message_text(f'{text}\n{sum(total_dict[call.from_user.id])} —Ä—É–±', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard)



 # –í—ã–±—Ä–≤—Ç—å –Ω–∞–ø–∏—Ç–æ–∫ 
@bot.message_handler(func=lambda call: call.text == '–ù–∞–ø–∏—Ç–∫–∏ ü•§') 
def choice_drink(msg): 
    keyboard = telebot.types.InlineKeyboardMarkup() 
    keyboard.add(telebot.types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –±–ª—é–¥–æ', callback_data='choice_drink')) 
    bot_msg = bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ', reply_markup=keyboard) 
    msgs_id[msg.from_user.id] = bot_msg.message_id 
 
# –°–ø–∏—Å–æ–∫ –Ω–∞–ø–∏—Ç–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ inline keyboard 
@bot.callback_query_handler(func=lambda call: call.data == 'choice_drink') 
def add_drink(call): 
    keyboard = generate_menu(drinks) 
    bot.edit_message_text('–ù–∞–ø–∏—Ç–∫–∏:', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard) 
 
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–∏—Ç–∫–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É 
@bot.callback_query_handler(func=lambda call: call.data in drinks) 
def add_drink_in_cart(call): 
    if call.from_user.id in carts: 
        carts[call.from_user.id].append(call.data) 
        total_dict[call.from_user.id].append(drinks[call.data]) 
    else: 
        carts[call.from_user.id] = [call.data] 
        total_dict[call.from_user.id] = [drinks[call.data]] 
    user_cart = carts[call.from_user.id] 
    text = ('–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ö–æ—Ä–∑–∏–Ω–∞:\n' + ' {} '*len(user_cart)).format(*user_cart)  
    keyboard = telebot.types.InlineKeyboardMarkup() 
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï', callback_data='choice_drink')) 
    keyboard.add(telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üí∏', callback_data='place_order')) 
    bot.edit_message_text(f'{text}\n{sum(total_dict[call.from_user.id])} —Ä—É–±', call.message.chat.id, msgs_id[call.from_user.id], reply_markup=keyboard)



@bot.message_handler(commands=['gif'])
def send_–ø–∞—Å—Ö–∞–ª–∫–∞(msg):
    bot.send_animation(msg.chat.id, 'https://media1.tenor.com/m/LTcVMiH7lyUAAAAd/burrito.gif')


# –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
@bot.message_handler(commands=['clean_cart'])
def clean(msg):
    try:
        del carts[msg.from_user.id]
        del total_dict[msg.from_user.id]
        bot.send_message(msg.chat.id, '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞üóë')
    except KeyError:
        bot.send_message(msg.chat.id, '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞üóë')



@bot.callback_query_handler(func=lambda call: call.data == 'place_order')
def pl_or(call):
        bot.send_message(call.message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞‚òé\n\n–ü—Ä–∏–º–µ—Ä: 89998887766')



@bot.callback_query_handler(func=lambda call: call.data == 'correct_number')
def plac_or(call):
        bot.send_message(call.message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞\n\n–ü—Ä–∏–º–µ—Ä: 22:10')



@bot.callback_query_handler(func=lambda call: call.data == 'deliver_order')
def plc_order(call):
    bot.send_message(call.message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏üè°')

@bot.message_handler(content_types=['text'])
def p(msg):
    if has_letter(msg.text):
            keyboard = telebot.types.InlineKeyboardMarkup()
            keyboard.add(telebot.types.InlineKeyboardButton('–ê–¥—Ä–µ—Å –≤–µ—Ä–Ω—ã–π ‚úÖ', callback_data='final_delivery_confirm'))
            keyboard.add(telebot.types.InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ –∞–¥—Ä–µ—Å –∑–∞–Ω–æ–≤–æ üîÑ', callback_data='deliver_order'))
            users_adres[msg.from_user.id] = msg.text
            bot_msg = bot.send_message(msg.chat.id, f'–ê–¥—Ä–µ—Å –≤–≤–µ–¥—ë–Ω –≤–µ—Ä–Ω–æ?\n{msg.text}', reply_markup=keyboard)
            msgs_id[msg.from_user.id] = bot_msg.text

    elif ':' in msg.text:
            keyboard = telebot.types.InlineKeyboardMarkup()
            keyboard.add(telebot.types.InlineKeyboardButton('–î–∞ ‚úÖ', callback_data='correct_time'))
            keyboard.add(telebot.types.InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è –∑–∞–Ω–æ–≤–æ üîÑ', callback_data='correct_number'))
            user_time[msg.from_user.id] = msg.text
            bot_msg = bot.send_message(msg.chat.id, f'–í—Ä–µ–º—è –≤–µ—Ä–Ω–æ–µ?\n{msg.text}', reply_markup=keyboard)
            msgs_id[msg.from_user.id] = bot_msg.text

    else:
            if len(msg.text) == 11:
                keyboard = telebot.types.InlineKeyboardMarkup()
                keyboard.add(telebot.types.InlineKeyboardButton('–ù–æ–º–µ—Ä –≤–µ—Ä–Ω—ã–π ‚úÖ', callback_data='correct_number'))
                keyboard.add(telebot.types.InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –∑–∞–Ω–æ–≤–æ üîÑ', callback_data='place_order'))
                user_number[msg.from_user.id] = msg.text
                bot_msg = bot.send_message(msg.chat.id, f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥—ë–Ω –≤–µ—Ä–Ω–æ?\n{msg.text}', reply_markup=keyboard)
                msgs_id[msg.from_user.id] = bot_msg.text
            else:
                bot.send_message(msg.chat.id, '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥—ë–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')

@bot.callback_query_handler(func=lambda call: call.data == 'correct_time')
def pick_or_deliv(call):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ—Å—Ç–∞–≤–∫–∞üõµ', callback_data='deliver_order'))
    keyboard.add(telebot.types.InlineKeyboardButton('–°–∞–º–æ–≤—ã–≤–æ–∑üë£', callback_data='pickup_confirm'))
    bot.send_message(call.message.chat.id, '–ö–∞–∫ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑?', reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == 'final_delivery_confirm')
def confirmation_delivery(call):
    output_cart = "\n".join(i for i in remove(carts[call.from_user.id]))
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='final_delivery'))
    keyboard.add(telebot.types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è', callback_data='correct_time_for_del'))
    bot.send_message(call.message.chat.id, f'–í–∞—à –∑–∞–∫–∞–∑:\n\n{output_cart}\n\n–°—É–º–º–∞ - {sum(total_dict[call.from_user.id])} —Ä—É–±.\n\n–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É - /clean_cart', reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: call.data == 'correct_time_for_del')
def pick_or_deliv(call):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–î–æ—Å—Ç–∞–≤–∫–∞üõµ', callback_data='final_delivery'))
    keyboard.add(telebot.types.InlineKeyboardButton('–°–∞–º–æ–≤—ã–≤–æ–∑üë£', callback_data='pickup_confirm'))
    bot.send_message(call.message.chat.id, '–ö–∞–∫ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑?', reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == 'final_delivery')
def send_order_deliver(call): 
    output_cart = "\n".join(i for i in remove(carts[call.from_user.id]))
    bot.send_message(call.message.chat.id, f'–∞–¥—Ä–µ—Å–æ–∫ - {users_adres[call.from_user.id]}\n\n–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç‚úî\n–° –≤–∞—Å {sum(total_dict[call.from_user.id])} —Ä—É–±\n(C—É–º–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º —Å–ª—É–∂–±—ã —Ç–∞–∫—Å–∏, –æ–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –≤–æ–¥–∏—Ç–µ–ª—é)\n\n–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞üí≥:\n5559 4941 1913 5704 - –ê–ª—å—Ñ–∞–±–∞–Ω–∫\n+7(950)092-86-72 - –ê–ª—å—Ñ–∞–±–∞–Ω–∫\n–ü–æ–ª—É—á–∞—Ç–µ–ª—å - –ú–∞—Ä—è–Ω—è–Ω –í–∞—Å–∏–ª–∏–π –ú–µ–∂–ª—É–º–æ–≤–∏—á\n\n–û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç!üìû')
    # bot.send_message(1177901865 , f'–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è - –¥–æ—Å—Ç–∞–≤–∫–∞\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - {user_number[call.from_user.id]}\n–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ - {users_adres[call.from_user.id]}\n\n{output_cart}\n\n–°—É–º–º–∞ - {sum(total_dict[call.from_user.id])} —Ä—É–±.\n\n–í—Ä–µ–º—è - {user_time[call.from_user.id]}')
    # bot.send_message(6549580182 , f'–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è - –¥–æ—Å—Ç–∞–≤–∫–∞\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - {user_number[call.from_user.id]}\n–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ - {users_adres[call.from_user.id]}\n\n{output_cart}\n\n–°—É–º–º–∞ - {sum(total_dict[call.from_user.id])} —Ä—É–±.\n\n–í—Ä–µ–º—è - {user_time[call.from_user.id]}')
    # bot.send_message(7106453907 , f'–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è - –¥–æ—Å—Ç–∞–≤–∫–∞\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - {user_number[call.from_user.id]}\n–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ - {users_adres[call.from_user.id]}\n\n{output_cart}\n\n–°—É–º–º–∞ - {sum(total_dict[call.from_user.id])} —Ä—É–±.\n\n–í—Ä–µ–º—è - {user_time[call.from_user.id]}')
    # bot.send_message(879086748, f'–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è - –¥–æ—Å—Ç–∞–≤–∫–∞\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - {user_number[call.from_user.id]}\n–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ - {users_adres[call.from_user.id]}\n\n{output_cart}\n\n–°—É–º–º–∞ - {sum(total_dict[call.from_user.id])} —Ä—É–±.\n\n–í—Ä–µ–º—è - {user_time[call.from_user.id]}')

    del carts[call.from_user.id]
    del total_dict[call.from_user.id]



@bot.callback_query_handler(func=lambda call: call.data == 'pickup_confirm')
def confirmation_delivery(call):
    output_cart = "\n".join(i for i in remove(carts[call.from_user.id]))
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='pickup'))
    keyboard.add(telebot.types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è', callback_data='correct_time'))
    bot.send_message(call.message.chat.id, f'–í–∞—à –∑–∞–∫–∞–∑:\n\n{output_cart}\n\n–°—É–º–º–∞ - {sum(total_dict[call.from_user.id])} —Ä—É–±.\n\n–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É - /clean_cart', reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == 'pickup')
def send_order_pickup(call):
    output_cart = "\n".join(i for i in remove(carts[call.from_user.id]))
    bot.send_message(call.message.chat.id, f'–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç‚úî\n–° –≤–∞—Å {int(sum(total_dict[call.from_user.id]))} —Ä—É–±\n\n–û–ø–ª–∞—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–º! üí∏\n–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞üí≥:\n5559 4941 1913 5704 - –ê–ª—å—Ñ–∞–±–∞–Ω–∫\n+7(950)092-86-72 - –ê–ª—å—Ñ–∞–±–∞–Ω–∫\n–ü–æ–ª—É—á–∞—Ç–µ–ª—å - –ú–∞—Ä—è–Ω—è–Ω –í–∞—Å–∏–ª–∏–π –ú–µ–∂–ª—É–º–æ–≤–∏—á\n\n–û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç!üìû')
    # bot.send_message(1177901865 , f'–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è - —Å–∞–º–æ–≤—ã–≤–æ–∑\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - {user_number[call.from_user.id]}\n–°—É–º–º–∞ - {int(sum(total_dict[call.from_user.id]))} —Ä—É–±.\n\n{output_cart}\n\n–í—Ä–µ–º—è - {user_time[call.from_user.id]}')
    # bot.send_message(6549580182 , f'–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è - —Å–∞–º–æ–≤—ã–≤–æ–∑\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - {user_number[call.from_user.id]}\n–°—É–º–º–∞ - {int(sum(total_dict[call.from_user.id]))} —Ä—É–±.\n\n{output_cart}\n\n–í—Ä–µ–º—è - {user_time[call.from_user.id]}')
    # bot.send_message(7106453907 , f'–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è - —Å–∞–º–æ–≤—ã–≤–æ–∑\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - {user_number[call.from_user.id]}\n–°—É–º–º–∞ - {int(sum(total_dict[call.from_user.id]))} —Ä—É–±.\n\n{output_cart}\n\n–í—Ä–µ–º—è - {user_time[call.from_user.id]}')
    # bot.send_message(879086748 , f'–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è - —Å–∞–º–æ–≤—ã–≤–æ–∑\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - {user_number[call.from_user.id]}\n–°—É–º–º–∞ - {int(sum(total_dict[call.from_user.id]))} —Ä—É–±.\n\n{output_cart}\n\n–í—Ä–µ–º—è - {user_time[call.from_user.id]}')

    carts.pop(call.from_user.id)
    total_dict.pop(call.from_user.id)


if __name__ == '__main__':
    bot.infinity_polling() 